[tool.poetry]
name = "fediview"
version = "0.1.0"
description = "fGet a digest of popular posts and boosts from your Mastodon (fediverse) timeline."
authors = ["Adam Hill <hello@adamghill.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/adamghill/fediview"
homepage = "https://fediview.com"

[tool.poetry.urls]
"Funding" = "https://github.com/sponsors/adamghill"

[tool.poetry.dependencies]
python = "^3.9"
Django = "^4"
django-fbv = "^0"
django-cache-memoize = "^0"
python-dotenv = "^0.17"
sentry-sdk = "^1"
first = "^2"
mastodon-py = "^1.8.0"
scipy = "^1.9.3"
django-unicorn = "^0.49"
django-rich-logging = "^0.2.0"
gunicorn = "^20.1.0"
redis = "^4.4.0"
hiredis = "^2.1.0"
whitenoise = "^6.2.0"
coltrane = { version = "^0.22.0", extras = ["mistune"]}
django-compressor = "^4.1"
dj-database-url = "^1.2.0"
psycopg2-binary = "^2.9.5"

[tool.poetry.group.dev.dependencies]
pytest = "^7"
black = "^22"
isort = "^5"
ruff = "^0"
pywatchman = "^1"
mypy = "^0.930"
coverage = {version = "^6", extras = ["toml"]}
pytest-cov = "^3"
pytest-django = "^4"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
skip_glob = [
    ".devbox/*"
]

[tool.pytest.ini_options]
addopts = "--quiet --failed-first --reuse-db --nomigrations -p no:warnings"
testpaths = [
    "tests"
]
markers = [
    "integration: marks tests as integration",
]

[tool.ruff]
line-length = 88
select = ["E", "F"]
ignore = []
extend-select = ["D"]
extend-ignore = [
    "D101",
    "D102",
    "D103",
    "D105",
    "D106",
    "D202",
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
    "D100",
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true

[tool.poe]
envfile = ".env"

[tool.poe.tasks]
r = { cmd = "./manage.py runserver 0:8777", help = "Start dev server" }
mm = { cmd = "./manage.py makemigrations", help = "Make migrations" }
mi = { cmd = "./manage.py migrate", help = "Migrate the database" }
md = ["mm", "mi"]
m = { cmd = "./manage.py", help = "manage.py" }
t = { cmd = "pytest", help = "Run tests" }
tc = { cmd = "pytest --cov=.", help = "Run tests with coverage" }
c = { cmd = "coverage report", help = "Show coverage report" }
my = { cmd = "mypy .", help = "Run mypy" }
b = { cmd = "black . --check --quiet", help = "Run black" }
i = { cmd = "isort . --check --quiet", help = "Run isort" }
tm = ["b", "i", "t", "my"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"